from aiogram_dialog import Window
from aiogram_dialog.widgets.kbd import Back, Button, Cancel, Select
from aiogram_dialog.widgets.text import Const, Format, Multi
from aiogram_dialog.widgets.media import DynamicMedia, MediaScroll, Media

from dialogs.for_battle.states import Battle
from . import getters, keyboards, selected


ROUND_TITLE = (
    '–û–±—Ä–∞—â–∞–π—Å—è –∫ –º–∞–≥–∏—á–µ—Å–∫–æ–º—É –ø–æ—Ç–æ–∫—É, —á–µ—Ä–ø–∞–π —Å–∏–ª—É –∏ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏ '
    '–∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è —á—Ç–æ–±—ã –ø–æ–±–µ–¥–∏—Ç—å –≤–æ–ª—à–µ–±–Ω–∏—Ü—É –∏ ... –æ–≤–ª–∞–¥–µ—Ç—å –µ—é.\n'
)
FOG_TEXT = (
    '<b>–¢–≤–æ–π —Ä–∞–∑—É–º –∑–∞—Ç—É–º–∞–Ω–µ–Ω –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ–º –æ—Ç –≤–∏–¥–∞ '
    '–ø–æ–ª—É–æ–±–Ω–∞–∂–µ–Ω–Ω–æ–≥–æ —Ç–µ–ª–∞ —á–∞—Ä–æ–¥–µ–π–∫–∏. –¢—ã –Ω–µ –º–æ–∂–µ—à—å '
    '—Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —á–∏—Ç–∞—Ç—å –º–∞–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ç–æ–∫.</b>\n'
)
FULL_FOG_TEXT = (
    '<b>–¢–≤–æ—ë –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–≥–ª–æ –ø—Ä–µ–¥–µ–ª–∞! –ú–∞–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ç–æ–∫ '
    '–Ω–∞—á–∏–Ω–∞–µ—Ç –∏—Å—Å—è–∫–∞—Ç—å –∏ —Ç—ã –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ –Ω–∞—á–∏–Ω–∞–µ—à—å —Ö–≤–∞—Ç–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é.</b>\n'
)
TYPE_MAGIC_TEXT = ("<u>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞–≥–∏–∏</u>\n–í <b>–ú–∏—Ä–µ –°–Ω–æ–≤–∏–¥–µ–Ω–∏–π</b> —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —Å–∏–ª.\n"
                   "–í–æ –≤—Ä–µ–º—è –ø–æ–µ–¥–∏–Ω–∫–∞ —ç—Ç–æ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏–µ <b>–ú–∞–≥–∏—á–µ—Å–∫–æ–µ –ó–µ—Ä–∫–∞–ª–æ</b>.")


async def exit_click(callback, button, dialog_manager):
    try:
        await dialog_manager.done()
        await callback.message.delete()
    except:
        pass


async def return_main_menu(callback, button, dialog_manager):
    await dialog_manager.switch_to(Battle.select_enemy_type)


def select_magic_window():
    return Window(
        Const(TYPE_MAGIC_TEXT),
        keyboards.magic_type_menu(),
        Cancel(Const('‚ùÆ‚ùÆ –í—ã—Ö–æ–¥'), on_click=exit_click),
        state=Battle.select_magic_type,
        getter=getters.get_magic_types,
    )


def select_enemy_window():
    return Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞"),
        keyboards.enemy_menu(),
        Cancel(Const('‚ùÆ‚ùÆ –í—ã—Ö–æ–¥'), on_click=exit_click),
        state=Battle.select_enemy_type,
    )


def show_enemy_window():
    return Window(
        DynamicMedia('image', when='has_image'),
        Format('{enemy_intro}'),
        keyboards.mob_info_menu(),
        Back(Const('‚ùÆ‚ùÆ –ù–∞–∑–∞–¥')),
        state=Battle.show_battle_preview,
        getter=getters.get_mob_data,
    )


def battle_round_window():
    return Window(
        DynamicMedia('event_image', when='has_event_image'),
        Multi(
            Const(ROUND_TITLE),
            Const(FULL_FOG_TEXT, when=lambda data, w, m: data.get("fog_full", False)),
            Const(
                FOG_TEXT,
                when=lambda data, w, m: data.get("fog_partial", False)
                and not data.get("fog_full", False),
            ),
            Format('üßîüèª: {player_hitpoints}\nüë∏üèº: {mob_hitpoints}\n'),
            Const(
                '<u>–ú–∞–≥–∏—á–µ—Å–∫–∞—è —Å–∏–ª–∞</u>',
                when=lambda data, w, m: not (data.get("fog_full", False)),
            ),
            Format('{player_bar}'),
            Format(
                '{player_message}',
                when=lambda data, w, m: data.get("player_message", "")
                and not (data.get("fog_full", False) or data.get("fog_partial", False)),
            ),
        ),
        keyboards.battle_round_menu(),
        state=Battle.battle_round,
        getter=getters.get_battle_state,
    )


def round_result_window():
    return Window(
        Multi(
            Format('{hitpoints_remove_text}\n'),
            Format('<blockquote>{mob_phrase}</blockquote>\n'),
            Format('üßîüèª: {player_bar}\nüë∏üèº: {mob_bar}\n'),
            Format('{event_text}\n'),
            Format(
                '{player_message}',
                when=lambda data, w, m: data.get("player_message", ""),
            ),
        ),
        keyboards.round_result_menu(),
        state=Battle.round_result,
        getter=getters.round_result_getter,
    )


def battle_result_window():
    return Window(
        DynamicMedia('image', when='has_image'),
        Format("{result_text}"),
        Button(Const("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚ùØ‚ùØ‚ùØ"), id="scene", on_click=selected.on_scene),
        # Button(Const("üèÉ‚Äç‚ôÇÔ∏è –í—ã–π—Ç–∏"), id="exit", on_click=exit_click),
        state=Battle.battle_result,
        getter=getters.get_battle_result,
    )
